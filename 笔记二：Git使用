1.下载Git的环境

2.打开CMD，设置用户名和邮箱
    > git config --global user.name "your name"
    > git config --global user.email "your email"
    
3.然后使用git config --list 查看设置

4.Git的理论基础

   你的本地仓库有 Git 维护的三棵“树”组成，这是 Git 的核心框架。
   这三棵树分别是：工作区域、暂存区域和 Git 仓库
   
   工作区域（Working Directory）就是你平时存放项目代码的地方。
   暂存区域（Stage）用于临时存放你的改动，事实上它只是一个文件，保存即将提交的文件列表信息。
   Git 仓库（Repository）就是安全存放数据的位置，这里边有你提交的所有版本的数据。其中，HEAD 指向最新放入仓库的版本（这第三棵树，确切的说，应该是 Git 仓库中 HEAD 指向的版本）。
   
   Git 的工作流程一般是酱紫：

    1. 在工作目录中添加、修改文件；

    2. 将需要进行版本管理的文件放入暂存区域；

    3. 将暂存区域的文件提交到 Git 仓库。

    因此，Git 管理的文件有三种状态：已修改（modified）、已暂存（staged）和已提交（committed），依次对应上边的每一个流程。

4.下面就开始正式使用Git

  首先创建文件夹，再cmd中定位到，输入git init,在文件夹下会出现一个隐藏文件。里面的文件很重要，不要改动。
  
  然后模拟项目的建立。
  
  第一步：新建一个README.md文件，输入一些内容，保存。然后，在命令行中输入git add README.md，如果什么都不显示表明正确，否则表示出错。（这一步就是把文件从工作区域放在三棵树里的暂存区域）
  第二步：在命令行中输入git commit -m "event description"(注意要用英文双引号),回车后会显示提交信息。(这一步就是把文件从暂存区域放在三棵树里的仓库)
  第三步：在文件夹下新建LICENSE文件，输入内容，返回命令行，输入git status,可以看到会显示未追踪文件，推荐使用 git add 语句。
  第四步：将LICENSE文件使用git  add语句加入，然后使用git status语句查看状态，显示新文件没有提交。
  第五步：命令行使用git reset HEAD，在使用git status语句，可以看到之前加入的文件变成了未追踪文件，回到了工作区。然后再重新加入，提交文件
  第六步：修改README.md文件，查看状态，显示文件已经被修改(红色)，需要去添加到暂存区域。输入添加命令，查看状态，显示文件已经被修改(绿色)。
  第七步：这时再进行修改README.md文件，查看状态，显示文件有两种状态，一种处于工作区，一种处于暂存区，如果现在进行commit，最后一次修改的就不会保存，所以
          需要先添加，再提交，才能把最后修改的文件保存到仓库中。
          
 5.返回
  
  
  
  
  
  
  
  
  
